 

A Project Report on 

 Food Ordering App  

 

 

By 

Vaibhav Vanire  

MCA – I, SEM – I 

2023-24 

 

 

 

To 

Savitribai Phule Pune University,Pune 

 

In Partial Fulfillment of the Degree of 

Master in Computer Application (M. C. A.) 

 

 

 

Under The Guidance Of 

Prof. Aarti Shinde 

 

 

 

Suryadatta Group of Institutes, Pune 

Text BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxText BoxSuryadatta Institute of Management and Mass Communication (SIMMC) 

 

 

 

       Date:- 

 

 

 

CERTIFICATE 

 

 

This is to certify that Mr. Vaibhav Vanire , has successfully completed his project work entitled “ Food Ordering App” in partial fulfillment of MCA – I Semester-I program  

for  the year A.Y. 2023-24 . He  have worked under our guidance and direction. 

 

 

 

 

 

Prof. Aarti Shinde 				 

            (Project Guide) 					        HoD-MCA,SGI 

 

 

 

 

 

 

Examiner 1 					                     		Examiner 2  

 

 

 

Date  :    

Place : Pune 

 

 

 

 

 

 

 

 

Acknowledgment 

 

 

I am a student of MCA second year. Here by I express our thanks to my project guide for allowing us to do the project on Food Ordering App. This project work has been the most exciting part of my learning experience which would be an asset for my future career. I would especially like to thank our guide and mentor Prof. Aarti Shinde, who constantly guided us in developing, pushing us to search for more answers to her numerous questions. Also I would like to thank Dr. Rupali Dahake, project coordinators, for her support. As a building block of MCA Department, I thank Dr. Manisha Kumbhar, HOD, MCA Department for her continuous support and help. I am grateful to many classmates who contributed their suggestions. Their hard work and examples push me to the limits of my capability and encourage me daily. 

 

 

 

 

 

 

 

 

 

 

 

 

Thank You 

 

Vaibhav Vanire. 

 

 

 

 

 

 

 

Index  

  

 

Chapter 

Page number 

CHAPTER 1 : INTRODUCTION 

1.1 Existing System  

5 

1.2 Need for System 

5 

1.3 Operating Environment Hardware and Software 

7 

1.4 Brief Description about Technology Used  

8 

CHAPTER 2 : PROPOSED SYSTEM 

2.1 Proposed System (Introduction of system) 

10 

2.2 Module specifications (Scope)   

11 

2.3 Objectives of System 

13 

CHAPTER 3 : ANALYSIS & DESIGN 

3.1 Use Case Diagrams 

 

3.2 Activity Diagram 

 

3.3. Sequence Diagram 

 

3.4 Class Diagram 

 

3.5 Module Hierarchy Diagram 

 

3.6 Table specifications (Database design) 

 

3.7 Data dictionary  

 

CHAPTER 4 : USER MANUAL 

4.1 User Interface Screens (Input) 

 

4.2 Output Screens with data  

 

4.3 Data Reports 

 

4.4 Sample program code 

 

4.5 Limitations  

 

Bibliography 

 

 

 

 

  

  

 

 

Chapter 1. Introduction  

 

 

1.1 Existing System: 

The Traditional food ordering system was the method used by restaurants prior to the rise of digital ordering systems. In this system, customers would place their orders over the phone or in person, and restaurant staff would manually record the details on paper order tickets or forms. The kitchen staff would then use these handwritten orders to prepare the food, and delivery drivers would use physical records to fulfill orders. 

This system was highly reliant on manual processes, which made it prone to human error, delays, and inefficiencies. Orders were processed slowly due to the lack of automation, and communication with customers was limited to phone calls or in-person interactions. There were no integrated systems for tracking orders, payment processing, or real-time updates, making the entire process less convenient for both customers and restaurant staff. 

In terms of reporting, the old system typically involved manual logs for sales, inventory, and customer details, often requiring restaurant staff to update records by hand. Order histories, customer preferences, and financial reports were typically maintained using physical records or basic spreadsheets. 

While the paper-based system was functional, it lacked the scalability and convenience of modern digital solutions, making it less efficient for handling larger volumes of orders or providing better customer experience. Today, this traditional approach is largely obsolete, replaced by digital platforms that offer automated and more accurate processing of orders, payments, and customer interactions. 

 

1.2 Need for System: 

As the traditional food ordering system faces numerous limitations, there is a strong need for modernized systems to improve efficiency, enhance customer satisfaction, and streamline restaurant operations. Here are some key reasons why a new, digital system is necessary: 

 

1. Increased Efficiency 

Manual Processing: The old paper-based system requires manual order taking, which is slow, error-prone, and inefficient. It involves human effort in writing orders, passing them to kitchen staff, and managing payments. 

Digital Advantage: A new online food ordering system (web-based or mobile app) can automate these processes. Orders can be directly entered into the system, sent to the kitchen, and processed without manual intervention, reducing the chances of mistakes and delays. 

 

2. Scalability 

Growth Limitations: As businesses grow, the paper-based system becomes harder to scale. The manual methods of tracking inventory, managing orders, and handling customer data become increasingly complex. 

Digital Transformation: An online ordering system can handle an unlimited number of orders simultaneously, allowing the business to scale operations without a proportional increase in staff or overhead. 

 

3. Improved Customer Experience 

Order Accuracy: In a paper-based system, there is a higher likelihood of order errors due to miscommunication. Customers may receive incorrect orders or encounter issues with their customization requests. 

Instant Confirmation: A new digital system can send instant order confirmations, offer real-time tracking, and provide a much smoother customer experience. Additionally, customers can review their order before submitting it, reducing the risk of errors. 

 

4. Real-Time Order Tracking 

Limited Visibility: The paper-based system does not provide customers with any real-time tracking for their order status. Customers are left in the dark about when their food will arrive, and changes in delivery status require manual communication. 

Real-Time Tracking: A digital system can offer order tracking, allowing customers to monitor their orders in real-time, improving transparency and reducing uncertainty. Customers can know when the food is being prepared, dispatched, and out for delivery. 

 

5. Enhanced Reporting & Analytics 

Manual Reports: In the old system, restaurant owners had to manually compile data related to sales, inventory, and customer orders, which could lead to inaccuracies and inefficiencies. 

Data-Driven Insights: A new system can automatically generate reports on sales, inventory levels, and customer preferences. Advanced systems can provide real-time analytics, such as identifying peak ordering times, most popular items, and customer behavior trends, which can be used for decision-making and targeted marketing efforts. 

 

 

6. Streamlined Inventory Management 

Manual Inventory Tracking: In the paper-based system, inventory management is done manually, leading to possible stock-outs, over-ordering, or wastage. 

Automation: A new system can automatically track inventory levels, update stock in real time, and notify staff when certain items are running low, ensuring efficient stock management. 

 

8. Better Customer Communication 

Limited Communication Channels: In the paper-based system, communication is limited to phone calls, which can be cumbersome, especially during busy times. Follow-up regarding order status, issues, or promotions often require a phone call. 

 

 

1.3 Operating Environment Hardware and Software 

Hardware Requirements- 

     Processor  

      Android 12L 

     Operating System 

      Android 

     Memory 

      8 GB RAM 

     Storage 

      10 GB 

 

Software Requirements- 

 

 

 

 

 

 

 

1.4 Brief Description about Technology Used: 

 

1. Android Studio (Integrated Development Environment) 

 

Description: Android Studio is the official IDE (Integrated Development Environment) for Android app development. It provides developers with powerful tools to build, test, and debug Android apps. 

Why Used: 

User Interface Design: Android Studio allows the creation of responsive, interactive user interfaces through XML layout files and visual tools. This helps in designing user-friendly screens for customers and staff. 

Efficient Code Editing: With built-in code completion, error checking, and refactoring features, it simplifies the process of writing, editing, and maintaining code. 

Emulator & Testing: Android Studio comes with an Android Emulator for testing the app on different device configurations, ensuring it works smoothly across a variety of Android devices. 

Version Control: Integration with Git allows you to manage the version control of your code, collaborate with other developers, and keep track of changes. 

 

2. Java Programming Language 

 

Description: Java is the primary programming language used for Android app development, and it is known for its portability, stability, and extensive libraries that make it suitable for building Android applications. 

Why Used: 

Platform Independence: Java is platform-independent, which means the code written for Android can run on any Android device without needing modifications, ensuring broad compatibility. 

Rich API and Libraries: Java provides a wide array of libraries and APIs that simplify the process of managing data, handling user interactions, implementing networking (e.g., API calls), and creating smooth UI transitions. 

Performance: Java ensures optimal performance in processing large datasets (like customer orders and menu items) in real-time. 

 

3. Firebase Firestore (Cloud Database) 

 

Description: Firestore is a NoSQL cloud database provided by Firebase, a Google-backed platform for app development. Firestore is scalable, real-time, and designed to handle structured and unstructured data with ease. 

Why Used: 

Real-Time Data Synchronization: Firestore allows for real-time updates, meaning that as soon as an order is placed, updated, or completed, the changes are reflected across all devices instantly. This is essential for a food ordering system to ensure both customers and kitchen staff are up-to-date. 

Scalable: Firestore can handle increasing amounts of data as the system grows, ensuring that large numbers of orders can be processed without performance issues. 

Data Structure: Firestore’s flexible document-based structure makes it easy to store and manage complex data, such as customer profiles, order history, and menu items, in a more organized manner. 

Security: Firebase provides built-in authentication and authorization tools (such as Firebase Authentication) to protect user data, ensuring that only authorized users can access certain features, like order details and payment information. 

Backend Integration: Firestore integrates seamlessly with other Firebase features, such as Firebase Functions (for server-side processing) and Firebase Analytics (for tracking user behavior). 

 

4. Android Java and Firebase Integration 

 

Why Used Together: 

Connectivity: Java and Firebase work well together because Firebase SDKs are designed to integrate smoothly with Android applications written in Java. This allows the app to easily connect to the Firestore database to retrieve, update, and delete data (such as orders, menu items, and user profiles). 

Real-Time Database Handling: Java code can interact with Firestore's real-time capabilities, ensuring that the app responds instantly to changes in data, such as order status updates or changes in menu items. 

Cloud Services: Firebase’s cloud functions can be used in conjunction with Android Java to run server-side tasks (like sending notifications or handling payment processes) without the need for managing physical servers. 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

Chapter 2. Proposed System  

 

2.1 Proposed System (Introduction of system): 

 

The proposed system for the online food ordering app aims to transform the traditional food ordering process by integrating modern technological solutions to provide an efficient, user-friendly, and scalable platform. The system will be designed to handle a seamless ordering experience for customers, improve operational efficiency for restaurant staff, and enable real-time tracking and management of orders. 

The new system will be mobile-based and cloud-supported, utilizing Android Studio, Java programming, and Firebase Firestore as core technologies. This integration will allow for smooth order processing, real-time updates, and secure data management, all while offering enhanced customer experiences. 

 

Key Objectives of the Proposed System: 

Seamless Ordering Process: 

Allow customers to browse menus, customize orders, and place them effortlessly through a mobile app interface. 

Provide a simple and intuitive user interface for customers to choose from various cuisines, view detailed descriptions of menu items, and easily modify orders as needed. 

Real-Time Updates: 

Enable customers and restaurant staff to receive real-time updates on order statuses, ensuring the system remains synchronized between different devices (customers, kitchen staff, and Admin). 

Allow customers to track their order in real-time, from preparation to delivery, offering transparency and reducing uncertainty. 

 

Backend Data Management: 

Use Firebase Firestore as the cloud-based database to store and manage user data, order history. 

Firestore's real-time synchronization will ensure data consistency across devices. 

 

 

Order Management: 

Provide restaurant staff with tools to manage incoming orders, track the progress of food preparation, and ensure timely delivery. 

 

 

 

2.2 Module specifications (Scope): 

 

The proposed online food ordering system will be divided into several key modules, each with specific functionalities and responsibilities. The system will be designed to provide a seamless experience for both customers and restaurant staff, integrating various features into manageable components. Below are the key modules and their specifications: 

 

 

1. Customer Module 

Scope: This module allows customers to browse the menu, place orders, make payments, track orders, and receive their order status. 

Key Features: 

User Registration & Login: 

Customers can register using their email, phone number, Customers can securely log in. 

Menu Browsing: 

Customers can view the menu (e.g., appetizers, main courses, beverages). 

Each menu item will have a detailed description, ingredients and price. 

Order Placement: 

Once the customer has selected the items, they can review their cart and place the order. 

The system will calculate the total cost and including taxes. 

Order Tracking: 

Customers can track the status of their order in real-time (e.g., order accepted, food preparation, dispatched, and out for delivery). 

Order History & Reordering: 

Customers can view their past orders and easily reorder previous items. 

Customer Rating Dish: 

Customer can review the dish and give a rating. 

 

Filing Complaint: 

Customer can file a complaint against the dish or chef accordingly. 

 

 

2. Chef Module 

Scope: This module is designed to allow chefs to manage incoming orders and ensure timely deliveries. 

Key Features: 

 

Order Management: 

Chefs can view and manage incoming orders in real-time. 

Order details, including the items ordered, customer information, and order   status, will be displayed. 

 

Order Status Updates: 

Chefs can update the order status as they process the order. 

Real-time synchronization will ensure that customers are notified immediately of status changes. 

 

Menu & Price Management: 

Chefs can update the menu, including adding/removing items, adjusting prices, and modifying descriptions. 

Real-time synchronization of menu updates across the system. 

 

Order History: 

The chefs can see previous orders and see the count of completed orders. 

 

3. Admin Module 

Scope: The admin module is designed to allow the restaurant owners or managers to monitor the entire system, manage orders, track performance, and configure system settings. 

Key Features: 

Complaint Management: 

Admins can review complaints of customers and check their authenticity.  

 

Suspend Chefs Account: 

Admins can suspend chefs account based on complaint. 

Admins can suspend chefs account for a specific time or permanently too. 

 

2.3 Objectives of System: 

 

The primary objective of the Online Food Ordering System is to streamline the entire process of ordering food, from browsing the menu to receiving food, while ensuring efficiency, ease of use, and scalability. The system will address the challenges of traditional, manual food ordering processes, providing an integrated solution for customers, restaurant staff, and administrators. Below are the key objectives of the proposed system: 

 

1. Improve Customer Experience 

Easy and Convenient Ordering: Provide customers with a user-friendly mobile platform to browse menus effortlessly from anywhere at any time. 

Real-Time Order Tracking: Allow customers to track the status of their orders in real-time, providing transparency and reducing uncertainty. 

Personalized Experience: Provide personalized recommendations and allow customers to view their order history, making it easy to reorder their favorite meals. 

 

 

2. Enhance Operational Efficiency 

Order Management for Chefs: Enable restaurant staff to view, process, and update orders efficiently. Chefs can track orders in real-time and update statuses (e.g., preparing, ready to be delivered). 

 

3. Scalability and Flexibility 

Scalable Infrastructure: The system is designed to handle increasing volumes of customers, orders, and data without compromising on performance. It will easily scale to accommodate more restaurants, users, or locations as the business grows. 

Customizability: The system will allow for easy customization of the menu, promotions, and user interface, ensuring flexibility to adapt to specific restaurant needs or customer preferences. 

4. Enhance Brand Visibility and Marketing 

Customer Feedback: Enable customers to provide ratings on their ordering experience, helping to continuously improve the service and maintain customer satisfaction. 

 

 

 

 

 
